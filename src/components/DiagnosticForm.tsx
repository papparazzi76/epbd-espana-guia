import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Checkbox } from "@/components/ui/checkbox";
import { Textarea } from "@/components/ui/textarea";
import { useToast } from "@/hooks/use-toast";
import { CheckCircle2, Home, Calendar, MapPin, FileText, Target, User, Mail, Phone, Thermometer, Zap, Wrench, Euro, Settings } from "lucide-react";
import { supabase } from "@/integrations/supabase/client";

interface FormData {
  // 1. Informaci√≥n general de la vivienda
  propertyType: string;
  constructionYear: string;
  surfaceArea: string;
  floors: string;
  rooms: string;
  bathrooms: string;
  occupancy: string;
  
  // 2. Envolvente t√©rmica
  facadeType: string;
  insulationState: string;
  windowType: string;
  thermalBridge: string;
  glassType: string;
  
  // 3. Sistemas de climatizaci√≥n y ACS
  heatingSystem: string;
  coolingSystem: string;
  hotWaterSystem: string;
  
  // 4. Instalaciones energ√©ticas
  solarPanels: string;
  solarPower: string;
  battery: string;
  solarThermal: string;
  heatPump: string;
  ventilationSystem: string;
  
  // 5. Consumos energ√©ticos
  electricConsumption: string;
  gasOilConsumption: string;
  monthlyBill: string;
  energyCertificate: string;
  
  // 6. Estado y posibilidades de reforma
  mainInterest: string;
  plannedWorks: string[];
  budget: string;
  
  // 7. Financiaci√≥n y ayudas
  interestSubsidies: string;
  interestFinancing: string;
  
  // 8. Localizaci√≥n
  province: string;
  city: string;
  climateZone: string;
  environment: string;
  
  // Datos de contacto
  name: string;
  email: string;
  phone: string;
}

export const DiagnosticForm = () => {
  const { toast } = useToast();
  const [currentStep, setCurrentStep] = useState(1);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [formData, setFormData] = useState<FormData>({
    propertyType: "",
    constructionYear: "",
    surfaceArea: "",
    floors: "",
    rooms: "",
    bathrooms: "",
    occupancy: "",
    facadeType: "",
    insulationState: "",
    windowType: "",
    thermalBridge: "",
    glassType: "",
    heatingSystem: "",
    coolingSystem: "",
    hotWaterSystem: "",
    solarPanels: "",
    solarPower: "",
    battery: "",
    solarThermal: "",
    heatPump: "",
    ventilationSystem: "",
    electricConsumption: "",
    gasOilConsumption: "",
    monthlyBill: "",
    energyCertificate: "",
    mainInterest: "",
    plannedWorks: [],
    budget: "",
    interestSubsidies: "",
    interestFinancing: "",
    province: "",
    city: "",
    climateZone: "",
    environment: "",
    name: "",
    email: "",
    phone: ""
  });

  const [submitted, setSubmitted] = useState(false);

  const updateFormData = (field: keyof FormData, value: string | string[]) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleCheckboxChange = (field: keyof FormData, value: string, checked: boolean) => {
    const currentArray = (formData[field] as string[]) || [];
    if (checked) {
      updateFormData(field, [...currentArray, value]);
    } else {
      updateFormData(field, currentArray.filter(item => item !== value));
    }
  };

  const generateComprehensiveGuide = () => {
    const guideContent = `INFORME T√âCNICO PERSONALIZADO - REHABILITACI√ìN ENERG√âTICA
====================================================================

üè† DATOS DE TU VIVIENDA
--------------------------------------------------------------------
Tipo de inmueble: ${formData.propertyType}
A√±o de construcci√≥n: ${formData.constructionYear}
Superficie: ${formData.surfaceArea} m¬≤
Plantas: ${formData.floors}
Habitaciones: ${formData.rooms}
Ba√±os: ${formData.bathrooms}
Uso: ${formData.occupancy}

üå°Ô∏è ENVOLVENTE T√âRMICA
--------------------------------------------------------------------
Tipo de fachada: ${formData.facadeType}
Estado del aislamiento: ${formData.insulationState}
Carpinter√≠as: ${formData.windowType}
Puente t√©rmico: ${formData.thermalBridge}
Tipo de vidrio: ${formData.glassType}

üî• SISTEMAS DE CLIMATIZACI√ìN
--------------------------------------------------------------------
Calefacci√≥n: ${formData.heatingSystem}
Refrigeraci√≥n: ${formData.coolingSystem}
Agua caliente sanitaria: ${formData.hotWaterSystem}

‚ö° INSTALACIONES ENERG√âTICAS
--------------------------------------------------------------------
Paneles solares fotovoltaicos: ${formData.solarPanels}
${formData.solarPower ? `Potencia instalada: ${formData.solarPower} kWp` : ''}
Bater√≠a: ${formData.battery}
Solar t√©rmica: ${formData.solarThermal}
Bomba de calor: ${formData.heatPump}
Ventilaci√≥n mec√°nica: ${formData.ventilationSystem}

üí° CONSUMOS ENERG√âTICOS
--------------------------------------------------------------------
Consumo el√©ctrico anual: ${formData.electricConsumption} kWh
Consumo gas/gasoil: ${formData.gasOilConsumption}
Factura mensual: ${formData.monthlyBill}‚Ç¨
Certificado energ√©tico: ${formData.energyCertificate}

üéØ OBJETIVOS Y PRESUPUESTO
--------------------------------------------------------------------
Inter√©s principal: ${formData.mainInterest}
Obras previstas: ${formData.plannedWorks.join(', ')}
Presupuesto disponible: ${formData.budget}

üìç UBICACI√ìN
--------------------------------------------------------------------
Provincia: ${formData.province}
Localidad: ${formData.city}
Zona clim√°tica: ${formData.climateZone}
Entorno: ${formData.environment}

üí∞ RECOMENDACIONES ESPEC√çFICAS
--------------------------------------------------------------------
${getPersonalizedRecommendations(formData)}

üìû CONTACTO
--------------------------------------------------------------------
Nombre: ${formData.name}
Email: ${formData.email}
Tel√©fono: ${formData.phone}

---
Informe generado el ${new Date().toLocaleDateString('es-ES')}
Por casas-eficientes.es - Especialistas en rehabilitaci√≥n energ√©tica
`;

    const blob = new Blob([guideContent], { type: 'text/plain;charset=utf-8' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'informe-tecnico-personalizado.txt';
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  };

  const getPersonalizedRecommendations = (data: FormData) => {
    let recommendations = [];
    
    if (data.insulationState === 'sin_aislamiento') {
      recommendations.push('üî• PRIORIDAD ALTA: Instalaci√≥n de aislamiento t√©rmico en fachada y cubierta');
    }
    
    if (data.windowType === 'madera' || data.thermalBridge === 'no') {
      recommendations.push('ü™ü Sustituci√≥n de ventanas por PVC con rotura de puente t√©rmico');
    }
    
    if (data.heatingSystem === 'electrico' || data.heatingSystem === 'gasoil') {
      recommendations.push('‚ô®Ô∏è Cambio a bomba de calor aerot√©rmica para mayor eficiencia');
    }
    
    if (data.solarPanels === 'no') {
      recommendations.push('‚òÄÔ∏è Instalaci√≥n de paneles solares fotovoltaicos');
    }
    
    if (data.energyCertificate === 'F' || data.energyCertificate === 'G') {
      recommendations.push('‚ö†Ô∏è URGENTE: Tu vivienda necesita mejoras antes de 2030');
    }
    
    return recommendations.length > 0 ? recommendations.join('\n') : 'Analizaremos tu caso espec√≠fico para darte recomendaciones personalizadas.';
  };

  const handleSubmit = async () => {
    if (!formData.name || !formData.email || !formData.phone) {
      toast({
        title: "Faltan datos",
        description: "Por favor completa todos los campos obligatorios",
        variant: "destructive"
      });
      return;
    }

    setIsSubmitting(true);

    try {
      // Prepare technical data as JSON for storage in the database
      const technicalData = {
        // General property info
        superficie: formData.surfaceArea,
        plantas: formData.floors,
        habitaciones: formData.rooms,
        ba√±os: formData.bathrooms,
        uso_vivienda: formData.occupancy,
        
        // Thermal envelope
        tipo_fachada: formData.facadeType,
        estado_aislamiento: formData.insulationState,
        tipo_ventanas: formData.windowType,
        puente_termico: formData.thermalBridge,
        tipo_vidrio: formData.glassType,
        
        // Climate systems
        sistema_calefaccion: formData.heatingSystem,
        sistema_refrigeracion: formData.coolingSystem,
        sistema_acs: formData.hotWaterSystem,
        
        // Energy installations
        paneles_solares: formData.solarPanels,
        potencia_solar: formData.solarPower,
        bateria: formData.battery,
        solar_termica: formData.solarThermal,
        bomba_calor: formData.heatPump,
        ventilacion_mecanica: formData.ventilationSystem,
        
        // Energy consumption
        consumo_electrico: formData.electricConsumption,
        consumo_gas_gasoil: formData.gasOilConsumption,
        factura_mensual: formData.monthlyBill,
        
        // Renovation plans
        obras_previstas: formData.plannedWorks,
        presupuesto: formData.budget,
        interes_subvenciones: formData.interestSubsidies,
        interes_financiacion: formData.interestFinancing,
        
        // Location details
        zona_climatica: formData.climateZone,
        entorno: formData.environment
      };

      // Insert lead data matching the actual database schema
      const { data, error } = await supabase
        .from('leads')
        .insert([{
          nombre_completo: formData.name,
          email: formData.email,
          telefono: formData.phone,
          tipo_vivienda: formData.propertyType,
          a√±o_construccion: formData.constructionYear,
          provincia: formData.province,
          localidad: formData.city,
          certificado_energetico: formData.energyCertificate || 'no_se',
          interes_principal: formData.mainInterest
        }])
        .select();

      if (error) {
        console.error('Error saving lead:', error);
        toast({
          title: "Error",
          description: "No se pudo enviar el formulario. Int√©ntalo de nuevo.",
          variant: "destructive"
        });
        return;
      }

      console.log("Lead saved successfully:", data);
      
      setSubmitted(true);
      toast({
        title: "¬°Perfecto!",
        description: "Tu informe t√©cnico personalizado se est√° generando",
      });

      // Auto-download the comprehensive guide
      setTimeout(() => {
        generateComprehensiveGuide();
      }, 1000);

    } catch (error) {
      console.error('Unexpected error:', error);
      toast({
        title: "Error",
        description: "Error inesperado. Por favor, int√©ntalo de nuevo.",
        variant: "destructive"
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  const provinces = [
    "√Ålava", "Albacete", "Alicante", "Almer√≠a", "Asturias", "√Åvila", "Badajoz", "Barcelona",
    "Burgos", "C√°ceres", "C√°diz", "Cantabria", "Castell√≥n", "Ciudad Real", "C√≥rdoba", "Cuenca",
    "Girona", "Granada", "Guadalajara", "Gipuzkoa", "Huelva", "Huesca", "Islas Baleares",
    "Ja√©n", "A Coru√±a", "La Rioja", "Las Palmas", "Le√≥n", "Lleida", "Lugo", "Madrid",
    "M√°laga", "Murcia", "Navarra", "Ourense", "Palencia", "Pontevedra", "Salamanca",
    "Santa Cruz de Tenerife", "Segovia", "Sevilla", "Soria", "Tarragona", "Teruel",
    "Toledo", "Valencia", "Valladolid", "Bizkaia", "Zamora", "Zaragoza"
  ];

  if (submitted) {
    return (
      <section id="diagnostico" className="section-padding bg-muted">
        <div className="container-width">
          <Card className="max-w-2xl mx-auto text-center card-elevated">
            <CardHeader>
              <div className="mx-auto w-16 h-16 bg-success/20 rounded-full flex items-center justify-center mb-4">
                <CheckCircle2 className="w-8 h-8 text-success" />
              </div>
              <CardTitle className="text-2xl">¬°Perfecto! Tu caso est√° siendo analizado</CardTitle>
              <CardDescription>
                Tu <strong>Informe T√©cnico Personalizado</strong> est√° listo para descargar.
                Un experto analizar√° toda la informaci√≥n para ofrecerte las mejores soluciones.
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="p-4 bg-primary/10 rounded-lg">
                  <h3 className="font-semibold text-primary mb-2">üìã Informe descargado</h3>
                  <p className="text-sm text-muted-foreground">
                    Tu informe t√©cnico con todas las recomendaciones espec√≠ficas para <strong>{formData.propertyType}</strong> en <strong>{formData.city}</strong>
                  </p>
                </div>
                <div className="p-4 bg-secondary/10 rounded-lg">
                  <h3 className="font-semibold text-secondary mb-2">üéØ Pr√≥ximo paso</h3>
                  <p className="text-sm text-muted-foreground">
                    En 24h recibir√°s una llamada de un t√©cnico especializado para analizar tu caso espec√≠fico y las ayudas disponibles
                  </p>
                </div>
                <Button onClick={() => {
                  setSubmitted(false);
                  setCurrentStep(1);
                  // Reset form data
                  setFormData({
                    propertyType: "", constructionYear: "", surfaceArea: "", floors: "", rooms: "",
                    bathrooms: "", occupancy: "", facadeType: "", insulationState: "", windowType: "",
                    thermalBridge: "", glassType: "", heatingSystem: "", coolingSystem: "", hotWaterSystem: "",
                    solarPanels: "", solarPower: "", battery: "", solarThermal: "", heatPump: "",
                    ventilationSystem: "", electricConsumption: "", gasOilConsumption: "", monthlyBill: "",
                    energyCertificate: "", mainInterest: "", plannedWorks: [], budget: "",
                    interestSubsidies: "", interestFinancing: "", province: "", city: "", climateZone: "",
                    environment: "", name: "", email: "", phone: ""
                  });
                }}>
                  Hacer otro diagn√≥stico
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </section>
    );
  }

  const totalSteps = 8;

  return (
    <section id="diagnostico" className="section-padding bg-muted">
      <div className="container-width">
        <div className="max-w-4xl mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">
              Diagn√≥stico T√©cnico Completo - 100% Gratuito
            </h2>
            <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
              Completa este formulario t√©cnico para recibir un informe personalizado con las mejoras m√°s rentables 
              para tu vivienda y todas las ayudas disponibles en tu zona.
            </p>
          </div>

          <Card className="card-elevated">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="flex items-center gap-2">
                  <span className="w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-bold">
                    {currentStep}
                  </span>
                  Paso {currentStep} de {totalSteps}
                </CardTitle>
                <div className="flex gap-1">
                  {Array.from({ length: totalSteps }, (_, i) => i + 1).map((step) => (
                    <div
                      key={step}
                      className={`w-3 h-3 rounded-full ${
                        step <= currentStep ? 'bg-primary' : 'bg-muted'
                      }`}
                    />
                  ))}
                </div>
              </div>
            </CardHeader>
            <CardContent className="space-y-6">
              {/* Paso 1: Informaci√≥n general de la vivienda */}
              {currentStep === 1 && (
                <div className="space-y-6">
                  <div className="text-center mb-6">
                    <Home className="w-12 h-12 mx-auto mb-3 text-primary" />
                    <h3 className="text-xl font-semibold">Informaci√≥n general de la vivienda</h3>
                  </div>

                  <div className="space-y-4">
                    <div className="space-y-3">
                      <Label className="text-base font-medium">Tipo de inmueble</Label>
                      <RadioGroup value={formData.propertyType} onValueChange={(value) => updateFormData('propertyType', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="chalet_independiente" id="chalet" />
                          <Label htmlFor="chalet">Chalet independiente</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="adosado_pareado" id="adosado" />
                          <Label htmlFor="adosado">Adosado / Pareado</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="piso_edificio" id="piso" />
                          <Label htmlFor="piso">Piso en edificio</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="duplex_atico" id="duplex" />
                          <Label htmlFor="duplex">D√∫plex / √Åtico</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="casa_rural" id="rural" />
                          <Label htmlFor="rural">Casa rural / Vivienda tradicional</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="grid md:grid-cols-2 gap-4">
                      <div className="space-y-3">
                        <Label>A√±o de construcci√≥n</Label>
                        <Select value={formData.constructionYear} onValueChange={(value) => updateFormData('constructionYear', value)}>
                          <SelectTrigger>
                            <SelectValue placeholder="Selecciona d√©cada" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="antes_1960">Antes de 1960</SelectItem>
                            <SelectItem value="1960_1980">1960-1980</SelectItem>
                            <SelectItem value="1980_2000">1980-2000</SelectItem>
                            <SelectItem value="2000_2010">2000-2010</SelectItem>
                            <SelectItem value="despues_2010">Despu√©s de 2010</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>

                      <div className="space-y-3">
                        <Label>Superficie construida (m¬≤)</Label>
                        <Input
                          value={formData.surfaceArea}
                          onChange={(e) => updateFormData('surfaceArea', e.target.value)}
                          placeholder="Ej: 120"
                          type="number"
                        />
                      </div>
                    </div>

                    <div className="grid md:grid-cols-3 gap-4">
                      <div className="space-y-3">
                        <Label>N√∫mero de plantas</Label>
                        <Select value={formData.floors} onValueChange={(value) => updateFormData('floors', value)}>
                          <SelectTrigger>
                            <SelectValue placeholder="Plantas" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="1">1 planta</SelectItem>
                            <SelectItem value="2">2 plantas</SelectItem>
                            <SelectItem value="3">3 plantas</SelectItem>
                            <SelectItem value="mas_3">M√°s de 3</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>

                      <div className="space-y-3">
                        <Label>N√∫mero de habitaciones</Label>
                        <Select value={formData.rooms} onValueChange={(value) => updateFormData('rooms', value)}>
                          <SelectTrigger>
                            <SelectValue placeholder="Habitaciones" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="1">1</SelectItem>
                            <SelectItem value="2">2</SelectItem>
                            <SelectItem value="3">3</SelectItem>
                            <SelectItem value="4">4</SelectItem>
                            <SelectItem value="mas_4">M√°s de 4</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>

                      <div className="space-y-3">
                        <Label>N√∫mero de ba√±os</Label>
                        <Select value={formData.bathrooms} onValueChange={(value) => updateFormData('bathrooms', value)}>
                          <SelectTrigger>
                            <SelectValue placeholder="Ba√±os" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="1">1</SelectItem>
                            <SelectItem value="2">2</SelectItem>
                            <SelectItem value="3">3</SelectItem>
                            <SelectItem value="mas_3">M√°s de 3</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Ocupaci√≥n habitual</Label>
                      <RadioGroup value={formData.occupancy} onValueChange={(value) => updateFormData('occupancy', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="principal" id="principal" />
                          <Label htmlFor="principal">Vivienda principal</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="segunda" id="segunda" />
                          <Label htmlFor="segunda">Segunda residencia</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="alquiler" id="alquiler" />
                          <Label htmlFor="alquiler">Alquiler</Label>
                        </div>
                      </RadioGroup>
                    </div>
                  </div>

                  <Button 
                    onClick={() => setCurrentStep(2)}
                    disabled={!formData.propertyType || !formData.constructionYear}
                    className="w-full"
                  >
                    Continuar
                  </Button>
                </div>
              )}

              {/* Paso 2: Envolvente t√©rmica */}
              {currentStep === 2 && (
                <div className="space-y-6">
                  <div className="text-center mb-6">
                    <Thermometer className="w-12 h-12 mx-auto mb-3 text-primary" />
                    <h3 className="text-xl font-semibold">Envolvente t√©rmica (Aislamiento)</h3>
                  </div>

                  <div className="space-y-4">
                    <div className="space-y-3">
                      <Label className="text-base font-medium">Tipo de fachada</Label>
                      <RadioGroup value={formData.facadeType} onValueChange={(value) => updateFormData('facadeType', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="ladrillo_macizo" id="ladrillo" />
                          <Label htmlFor="ladrillo">Ladrillo macizo</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="bloque_hormigon" id="hormigon" />
                          <Label htmlFor="hormigon">Bloque hormig√≥n</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="fachada_ventilada" id="ventilada" />
                          <Label htmlFor="ventilada">Fachada ventilada</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="sate" id="sate" />
                          <Label htmlFor="sate">SATE u otro aislamiento exterior</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Estado del aislamiento</Label>
                      <RadioGroup value={formData.insulationState} onValueChange={(value) => updateFormData('insulationState', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="sin_aislamiento" id="sin" />
                          <Label htmlFor="sin">Sin aislamiento</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="parcial" id="parcial" />
                          <Label htmlFor="parcial">Aislamiento parcial</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="completo_exterior" id="exterior" />
                          <Label htmlFor="exterior">Aislamiento completo exterior</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="completo_interior" id="interior" />
                          <Label htmlFor="interior">Aislamiento completo interior</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Carpinter√≠as</Label>
                      <RadioGroup value={formData.windowType} onValueChange={(value) => updateFormData('windowType', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="madera" id="madera" />
                          <Label htmlFor="madera">Madera</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="aluminio" id="aluminio" />
                          <Label htmlFor="aluminio">Aluminio</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="pvc" id="pvc" />
                          <Label htmlFor="pvc">PVC</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Con rotura de puente t√©rmico</Label>
                      <RadioGroup value={formData.thermalBridge} onValueChange={(value) => updateFormData('thermalBridge', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="si" id="puente_si" />
                          <Label htmlFor="puente_si">S√≠</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="no" id="puente_no" />
                          <Label htmlFor="puente_no">No</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="no_se_puente" id="puente_nose" />
                          <Label htmlFor="puente_nose">No lo s√©</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Vidrios</Label>
                      <RadioGroup value={formData.glassType} onValueChange={(value) => updateFormData('glassType', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="sencillo" id="sencillo" />
                          <Label htmlFor="sencillo">Sencillo</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="doble" id="doble" />
                          <Label htmlFor="doble">Doble</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="triple" id="triple" />
                          <Label htmlFor="triple">Triple</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="bajo_emisivo" id="emisivo" />
                          <Label htmlFor="emisivo">Bajo emisivo / Control solar</Label>
                        </div>
                      </RadioGroup>
                    </div>
                  </div>

                  <div className="flex gap-3">
                    <Button variant="outline" onClick={() => setCurrentStep(1)} className="flex-1">
                      Atr√°s
                    </Button>
                    <Button 
                      onClick={() => setCurrentStep(3)}
                      disabled={!formData.facadeType || !formData.insulationState}
                      className="flex-1"
                    >
                      Continuar
                    </Button>
                  </div>
                </div>
              )}

              {/* Paso 3: Sistemas de climatizaci√≥n y ACS */}
              {currentStep === 3 && (
                <div className="space-y-6">
                  <div className="text-center mb-6">
                    <Settings className="w-12 h-12 mx-auto mb-3 text-primary" />
                    <h3 className="text-xl font-semibold">Sistemas de climatizaci√≥n y ACS</h3>
                  </div>

                  <div className="space-y-4">
                    <div className="space-y-3">
                      <Label className="text-base font-medium">Sistema de calefacci√≥n principal</Label>
                      <RadioGroup value={formData.heatingSystem} onValueChange={(value) => updateFormData('heatingSystem', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="gas_natural" id="gas" />
                          <Label htmlFor="gas">Gas natural</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="gasoil" id="gasoil" />
                          <Label htmlFor="gasoil">Gasoil</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="electrico" id="electrico" />
                          <Label htmlFor="electrico">El√©ctrico (radiadores, acumuladores)</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="biomasa" id="biomasa" />
                          <Label htmlFor="biomasa">Biomasa</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="aerotermia" id="aerotermia" />
                          <Label htmlFor="aerotermia">Aerotermia / Geotermia</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Sistema de refrigeraci√≥n</Label>
                      <RadioGroup value={formData.coolingSystem} onValueChange={(value) => updateFormData('coolingSystem', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="ninguno" id="frio_ninguno" />
                          <Label htmlFor="frio_ninguno">Ninguno</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="aire_individual" id="individual" />
                          <Label htmlFor="individual">Aire acondicionado individual</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="multisplit" id="multisplit" />
                          <Label htmlFor="multisplit">Sistema multisplit</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="conductos" id="conductos" />
                          <Label htmlFor="conductos">Conductos</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Producci√≥n de ACS (agua caliente)</Label>
                      <RadioGroup value={formData.hotWaterSystem} onValueChange={(value) => updateFormData('hotWaterSystem', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="caldera_mixta" id="mixta" />
                          <Label htmlFor="mixta">Caldera mixta</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="termo_electrico" id="termo" />
                          <Label htmlFor="termo">Termo el√©ctrico</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="solar_termico" id="solar_termico" />
                          <Label htmlFor="solar_termico">Paneles solares t√©rmicos</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="bomba_calor_acs" id="bomba_acs" />
                          <Label htmlFor="bomba_acs">Bomba de calor</Label>
                        </div>
                      </RadioGroup>
                    </div>
                  </div>

                  <div className="flex gap-3">
                    <Button variant="outline" onClick={() => setCurrentStep(2)} className="flex-1">
                      Atr√°s
                    </Button>
                    <Button 
                      onClick={() => setCurrentStep(4)}
                      disabled={!formData.heatingSystem || !formData.coolingSystem || !formData.hotWaterSystem}
                      className="flex-1"
                    >
                      Continuar
                    </Button>
                  </div>
                </div>
              )}

              {/* Paso 4: Instalaciones energ√©ticas */}
              {currentStep === 4 && (
                <div className="space-y-6">
                  <div className="text-center mb-6">
                    <Zap className="w-12 h-12 mx-auto mb-3 text-primary" />
                    <h3 className="text-xl font-semibold">Instalaciones energ√©ticas</h3>
                  </div>

                  <div className="space-y-4">
                    <div className="space-y-3">
                      <Label className="text-base font-medium">¬øTienes placas solares fotovoltaicas?</Label>
                      <RadioGroup value={formData.solarPanels} onValueChange={(value) => updateFormData('solarPanels', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="si" id="placas_si" />
                          <Label htmlFor="placas_si">S√≠</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="no" id="placas_no" />
                          <Label htmlFor="placas_no">No</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    {formData.solarPanels === 'si' && (
                      <>
                        <div className="space-y-3">
                          <Label>Potencia instalada (kWp)</Label>
                          <Input
                            value={formData.solarPower}
                            onChange={(e) => updateFormData('solarPower', e.target.value)}
                            placeholder="Ej: 5.5"
                            type="number"
                          />
                        </div>

                        <div className="space-y-3">
                          <Label className="text-base font-medium">¬øCon bater√≠a?</Label>
                          <RadioGroup value={formData.battery} onValueChange={(value) => updateFormData('battery', value)}>
                            <div className="flex items-center space-x-2">
                              <RadioGroupItem value="si" id="bateria_si" />
                              <Label htmlFor="bateria_si">S√≠</Label>
                            </div>
                            <div className="flex items-center space-x-2">
                              <RadioGroupItem value="no" id="bateria_no" />
                              <Label htmlFor="bateria_no">No</Label>
                            </div>
                          </RadioGroup>
                        </div>
                      </>
                    )}

                    <div className="space-y-3">
                      <Label className="text-base font-medium">¬øTienes solar t√©rmica?</Label>
                      <RadioGroup value={formData.solarThermal} onValueChange={(value) => updateFormData('solarThermal', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="si" id="termica_si" />
                          <Label htmlFor="termica_si">S√≠</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="no" id="termica_no" />
                          <Label htmlFor="termica_no">No</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">¬øTienes aerotermia o geotermia?</Label>
                      <RadioGroup value={formData.heatPump} onValueChange={(value) => updateFormData('heatPump', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="si" id="bomba_si" />
                          <Label htmlFor="bomba_si">S√≠</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="no" id="bomba_no" />
                          <Label htmlFor="bomba_no">No</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">¬øSistema de ventilaci√≥n mec√°nica con recuperaci√≥n de calor?</Label>
                      <RadioGroup value={formData.ventilationSystem} onValueChange={(value) => updateFormData('ventilationSystem', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="si" id="ventilacion_si" />
                          <Label htmlFor="ventilacion_si">S√≠</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="no" id="ventilacion_no" />
                          <Label htmlFor="ventilacion_no">No</Label>
                        </div>
                      </RadioGroup>
                    </div>
                  </div>

                  <div className="flex gap-3">
                    <Button variant="outline" onClick={() => setCurrentStep(3)} className="flex-1">
                      Atr√°s
                    </Button>
                    <Button 
                      onClick={() => setCurrentStep(5)}
                      disabled={!formData.solarPanels || !formData.solarThermal || !formData.heatPump || !formData.ventilationSystem}
                      className="flex-1"
                    >
                      Continuar
                    </Button>
                  </div>
                </div>
              )}

              {/* Paso 5: Consumos energ√©ticos actuales */}
              {currentStep === 5 && (
                <div className="space-y-6">
                  <div className="text-center mb-6">
                    <FileText className="w-12 h-12 mx-auto mb-3 text-primary" />
                    <h3 className="text-xl font-semibold">Consumos energ√©ticos actuales</h3>
                  </div>

                  <div className="space-y-4">
                    <div className="space-y-3">
                      <Label>Consumo el√©ctrico anual (kWh)</Label>
                      <Input
                        value={formData.electricConsumption}
                        onChange={(e) => updateFormData('electricConsumption', e.target.value)}
                        placeholder="Ej: 4500"
                        type="number"
                      />
                    </div>

                    <div className="space-y-3">
                      <Label>Consumo de gas/gasoil anual</Label>
                      <Input
                        value={formData.gasOilConsumption}
                        onChange={(e) => updateFormData('gasOilConsumption', e.target.value)}
                        placeholder="Ej: 2000 litros o 15000 kWh"
                      />
                    </div>

                    <div className="space-y-3">
                      <Label>Factura energ√©tica mensual aproximada (‚Ç¨)</Label>
                      <Input
                        value={formData.monthlyBill}
                        onChange={(e) => updateFormData('monthlyBill', e.target.value)}
                        placeholder="Ej: 150"
                        type="number"
                      />
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Certificado energ√©tico actual</Label>
                      <Select value={formData.energyCertificate} onValueChange={(value) => updateFormData('energyCertificate', value)}>
                        <SelectTrigger>
                          <SelectValue placeholder="Selecciona la clase energ√©tica" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="A">Clase A</SelectItem>
                          <SelectItem value="B">Clase B</SelectItem>
                          <SelectItem value="C">Clase C</SelectItem>
                          <SelectItem value="D">Clase D</SelectItem>
                          <SelectItem value="E">Clase E</SelectItem>
                          <SelectItem value="F">Clase F</SelectItem>
                          <SelectItem value="G">Clase G</SelectItem>
                          <SelectItem value="no_tengo">No tengo certificado</SelectItem>
                          <SelectItem value="no_se">No lo s√©</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>

                  <div className="flex gap-3">
                    <Button variant="outline" onClick={() => setCurrentStep(4)} className="flex-1">
                      Atr√°s
                    </Button>
                    <Button 
                      onClick={() => setCurrentStep(6)}
                      disabled={!formData.monthlyBill || !formData.energyCertificate}
                      className="flex-1"
                    >
                      Continuar
                    </Button>
                  </div>
                </div>
              )}

              {/* Paso 6: Estado y posibilidades de reforma */}
              {currentStep === 6 && (
                <div className="space-y-6">
                  <div className="text-center mb-6">
                    <Wrench className="w-12 h-12 mx-auto mb-3 text-primary" />
                    <h3 className="text-xl font-semibold">Estado y posibilidades de reforma</h3>
                  </div>

                  <div className="space-y-4">
                    <div className="space-y-3">
                      <Label className="text-base font-medium">¬øQu√© te interesa m√°s?</Label>
                      <RadioGroup value={formData.mainInterest} onValueChange={(value) => updateFormData('mainInterest', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="ahorro_factura" id="ahorro" />
                          <Label htmlFor="ahorro">Ahorro en factura energ√©tica</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="revalorizacion" id="valor" />
                          <Label htmlFor="valor">Revalorizaci√≥n de la vivienda</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="confort" id="confort" />
                          <Label htmlFor="confort">Confort t√©rmico</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="normativo" id="normativo" />
                          <Label htmlFor="normativo">Cumplimiento normativo (EPBD 2024)</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Obras previstas (puedes seleccionar varias)</Label>
                      <div className="space-y-2">
                        {[
                          { id: 'integral', label: 'Rehabilitaci√≥n integral' },
                          { id: 'fachada_cubierta', label: 'Mejora de fachada y cubiertas' },
                          { id: 'ventanas', label: 'Sustituci√≥n de ventanas' },
                          { id: 'climatizacion', label: 'Cambio de sistema de climatizaci√≥n' },
                          { id: 'renovables', label: 'Instalaci√≥n de renovables' }
                        ].map((work) => (
                          <div key={work.id} className="flex items-center space-x-2">
                            <Checkbox
                              id={work.id}
                              checked={formData.plannedWorks.includes(work.id)}
                              onCheckedChange={(checked) => handleCheckboxChange('plannedWorks', work.id, checked as boolean)}
                            />
                            <Label htmlFor={work.id}>{work.label}</Label>
                          </div>
                        ))}
                      </div>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Disponibilidad de presupuesto</Label>
                      <RadioGroup value={formData.budget} onValueChange={(value) => updateFormData('budget', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="menos_10k" id="10k" />
                          <Label htmlFor="10k">Menos de 10.000‚Ç¨</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="10k_30k" id="30k" />
                          <Label htmlFor="30k">10.000‚Ç¨ - 30.000‚Ç¨</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="30k_60k" id="60k" />
                          <Label htmlFor="60k">30.000‚Ç¨ - 60.000‚Ç¨</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="mas_60k" id="mas60k" />
                          <Label htmlFor="mas60k">M√°s de 60.000‚Ç¨</Label>
                        </div>
                      </RadioGroup>
                    </div>
                  </div>

                  <div className="flex gap-3">
                    <Button variant="outline" onClick={() => setCurrentStep(5)} className="flex-1">
                      Atr√°s
                    </Button>
                    <Button 
                      onClick={() => setCurrentStep(7)}
                      disabled={!formData.mainInterest || formData.plannedWorks.length === 0 || !formData.budget}
                      className="flex-1"
                    >
                      Continuar
                    </Button>
                  </div>
                </div>
              )}

              {/* Paso 7: Financiaci√≥n y ayudas */}
              {currentStep === 7 && (
                <div className="space-y-6">
                  <div className="text-center mb-6">
                    <Euro className="w-12 h-12 mx-auto mb-3 text-primary" />
                    <h3 className="text-xl font-semibold">Financiaci√≥n y ayudas</h3>
                  </div>

                  <div className="space-y-4">
                    <div className="space-y-3">
                      <Label className="text-base font-medium">¬øTe interesa solicitar subvenciones / programas PREE 5000?</Label>
                      <RadioGroup value={formData.interestSubsidies} onValueChange={(value) => updateFormData('interestSubsidies', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="si" id="sub_si" />
                          <Label htmlFor="sub_si">S√≠</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="no" id="sub_no" />
                          <Label htmlFor="sub_no">No</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="informacion" id="sub_info" />
                          <Label htmlFor="sub_info">Necesito m√°s informaci√≥n</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">¬øTe interesa financiaci√≥n privada (cr√©dito verde, hipoteca eficiente)?</Label>
                      <RadioGroup value={formData.interestFinancing} onValueChange={(value) => updateFormData('interestFinancing', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="si" id="fin_si" />
                          <Label htmlFor="fin_si">S√≠</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="no" id="fin_no" />
                          <Label htmlFor="fin_no">No</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="informacion_fin" id="fin_info" />
                          <Label htmlFor="fin_info">Necesito m√°s informaci√≥n</Label>
                        </div>
                      </RadioGroup>
                    </div>

                    <div className="grid md:grid-cols-2 gap-4">
                      <div className="space-y-3">
                        <Label>Provincia</Label>
                        <Select value={formData.province} onValueChange={(value) => updateFormData('province', value)}>
                          <SelectTrigger>
                            <SelectValue placeholder="Selecciona provincia" />
                          </SelectTrigger>
                          <SelectContent>
                            {provinces.map((province) => (
                              <SelectItem key={province} value={province}>{province}</SelectItem>
                            ))}
                          </SelectContent>
                        </Select>
                      </div>

                      <div className="space-y-3">
                        <Label>Municipio</Label>
                        <Input
                          value={formData.city}
                          onChange={(e) => updateFormData('city', e.target.value)}
                          placeholder="Ej: Madrid, Barcelona..."
                        />
                      </div>
                    </div>

                    <div className="space-y-3">
                      <Label className="text-base font-medium">Entorno</Label>
                      <RadioGroup value={formData.environment} onValueChange={(value) => updateFormData('environment', value)}>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="urbano" id="urbano" />
                          <Label htmlFor="urbano">Urbano</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="periurbano" id="periurbano" />
                          <Label htmlFor="periurbano">Periurbano</Label>
                        </div>
                        <div className="flex items-center space-x-2">
                          <RadioGroupItem value="rural" id="rural_env" />
                          <Label htmlFor="rural_env">Rural</Label>
                        </div>
                      </RadioGroup>
                    </div>
                  </div>

                  <div className="flex gap-3">
                    <Button variant="outline" onClick={() => setCurrentStep(6)} className="flex-1">
                      Atr√°s
                    </Button>
                    <Button 
                      onClick={() => setCurrentStep(8)}
                      disabled={!formData.interestSubsidies || !formData.interestFinancing || !formData.province || !formData.city}
                      className="flex-1"
                    >
                      Continuar
                    </Button>
                  </div>
                </div>
              )}

              {/* Paso 8: Datos de contacto */}
              {currentStep === 8 && (
                <div className="space-y-6">
                  <div className="text-center mb-6">
                    <User className="w-12 h-12 mx-auto mb-3 text-primary" />
                    <h3 className="text-xl font-semibold">Datos de contacto</h3>
                    <p className="text-muted-foreground">Para enviarte tu informe t√©cnico personalizado</p>
                  </div>

                  <div className="space-y-4">
                    <div className="space-y-3">
                      <Label className="flex items-center gap-2 text-base font-medium">
                        <User className="w-4 h-4" />
                        Nombre completo *
                      </Label>
                      <Input
                        value={formData.name}
                        onChange={(e) => updateFormData('name', e.target.value)}
                        placeholder="Tu nombre completo"
                        required
                      />
                    </div>

                    <div className="space-y-3">
                      <Label className="flex items-center gap-2 text-base font-medium">
                        <Mail className="w-4 h-4" />
                        Email *
                      </Label>
                      <Input
                        type="email"
                        value={formData.email}
                        onChange={(e) => updateFormData('email', e.target.value)}
                        placeholder="tu@email.com"
                        required
                      />
                    </div>

                    <div className="space-y-3">
                      <Label className="flex items-center gap-2 text-base font-medium">
                        <Phone className="w-4 h-4" />
                        Tel√©fono *
                      </Label>
                      <Input
                        type="tel"
                        value={formData.phone}
                        onChange={(e) => updateFormData('phone', e.target.value)}
                        placeholder="600 000 000"
                        required
                      />
                    </div>

                    <div className="p-4 bg-muted rounded-lg">
                      <p className="text-sm text-muted-foreground">
                        Al completar este formulario, recibir√°s un informe t√©cnico personalizado 
                        y un experto te contactar√° en las pr√≥ximas 24h para analizar tu caso espec√≠fico.
                      </p>
                    </div>
                  </div>

                  <div className="flex gap-3">
                    <Button variant="outline" onClick={() => setCurrentStep(7)} className="flex-1">
                      Atr√°s
                    </Button>
                    <Button 
                      onClick={handleSubmit}
                      disabled={!formData.name || !formData.email || !formData.phone || isSubmitting}
                      className="flex-1"
                    >
                      {isSubmitting ? "Generando informe..." : "Generar informe t√©cnico"}
                    </Button>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
};